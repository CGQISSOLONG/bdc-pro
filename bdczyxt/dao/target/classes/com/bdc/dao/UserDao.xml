<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdc.dao.UserDao" >
    <select id="findByName" resultType="com.bdc.entity.Users">
        select * from USER where account=#{account}
    </select>
    <select id="findAll" resultType="com.bdc.entity.Users">
        select * from user
    </select>

    <select id="findById" resultType="com.bdc.entity.Users">
        select * from user where id=#{id}
    </select>

    <update id="save" parameterType="com.bdc.entity.Users">
        update  user set token = #{token } where account = #{account}
    </update>

    <select id="getPubUserByToken" resultType="com.bdc.entity.Users">
        select * from user where token=#{token}
    </select>

    <insert id="insert">
        insert into USER (id, ACCOUNT, CREATETIME, updateTime, ip, LASTLOGINDATE, phone, PASSWORD,
                                STAFF_NAME,
                                STATE, STATUS, TOKEN, USER_TYPE)
        values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR},
                #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, #{ip,jdbcType=VARCHAR},
                #{lastLoginDate,jdbcType=DATE}, #{phone,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{staffName,jdbcType=VARCHAR}, #{state,jdbcType=BIGINT},
                #{status,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR})
    </insert>


    <insert id="insertSelective" parameterType="com.bdc.entity.Users">
        <!--  <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
              SELECT  SEQ_PUB_USER.NEXTVAL FROM dual
          </selectKey>-->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="areaCode != null">
                areacode,
            </if>
            <if test="createTime != null">
                createtime,
            </if>
            <if test="updateTime != null">
                updatetime,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="lastLoginDate != null">
                LASTLOGINDATE,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="staffName != null">
                staff_name,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userType != null">
                user_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="areaCode != null">
                #{areaCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=DATE},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},

            </if>
            <if test="lastLoginDate != null">
                #{lastLoginDate,jdbcType=DATE},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},

            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="staffName != null">
                #{staffName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=BIGINT},

            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="findPubUserByCreateTime" resultType="java.lang.Integer">
        select count(*)
        from USER
        where CREATETIME =DATE_FORMAT(CURRENT_DATE, 'yyyyMMdd')
    </select>
    <select id="findPubUserList" resultType="com.bdc.entity.Users">
        select
        id,
        account,
        ip,
        CREATETIME AS createTime,
        status
        from USER
        <where>
            <if test="account != null and account != ''">
                account like '%'||#{account}||'%'
            </if>
        </where>
    </select>

    <update id="updatePasswordById">
        update user
        set PASSWORD=#{password,jdbcType=VARCHAR},
            UPDATETIME=CURRENT_DATE,
            LASTLOGINDATE=CURRENT_DATE
        where ID = #{id,jdbcType=INTEGER}
    </update>

    <update id="updatePasswordByAccount">
        update USER
        set PASSWORD=#{password,jdbcType=VARCHAR},
            UPDATETIME=CURRENT_DATE
        where ACCOUNT=#{account,jdbcType=VARCHAR}
    </update>

    <update id="updateAccountById">
        update USER
        set ACCOUNT=#{newAccount,jdbcType=VARCHAR},
            UPDATETIME=CURRENT_DATE
        where ID=#{id,jdbcType=INTEGER}
    </update>

    <select id="getPubUserByAccount" resultType="com.bdc.entity.Users">
        SELECT a.*
        FROM USER a
        where a.account=#{account,jdbcType=VARCHAR}
    </select>


    <select id="findPubUserByAccount" resultType="com.bdc.entity.Users">
        select * from user where account=#{account}
    </select>

    <update id="updateStatusById" parameterType="com.bdc.entity.Users">
          update USER
        set status=#{status}
        where ID=#{id}
    </update>

    <update id="updatePubUserById" parameterType="com.bdc.entity.Users">
           update User  set
           account=#{account},password=#{password} where id=#{id}
    </update>

    <select id="findByToken" resultType="com.bdc.entity.Users">
        select * from user where token =#{token}
    </select>

    <select id="findOne" resultType="com.bdc.entity.Users">
        select * from user where id =#{id}
    </select>

    <delete id="delete" parameterType="com.bdc.entity.Users">
        delete from  user where id=#{id}
    </delete>
</mapper>
